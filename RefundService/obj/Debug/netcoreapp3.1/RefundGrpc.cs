// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/refund.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace RefundService {
  public static partial class RefundService
  {
    static readonly string __ServiceName = "Refund.RefundService";

    static readonly grpc::Marshaller<global::RefundService.RefundRequest> __Marshaller_Refund_RefundRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RefundService.RefundRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RefundService.RefundReply> __Marshaller_Refund_RefundReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RefundService.RefundReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RefundService.NotifyRequest> __Marshaller_Refund_NotifyRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RefundService.NotifyRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::RefundService.NotifyReply> __Marshaller_Refund_NotifyReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::RefundService.NotifyReply.Parser.ParseFrom);

    static readonly grpc::Method<global::RefundService.RefundRequest, global::RefundService.RefundReply> __Method_Refund = new grpc::Method<global::RefundService.RefundRequest, global::RefundService.RefundReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Refund",
        __Marshaller_Refund_RefundRequest,
        __Marshaller_Refund_RefundReply);

    static readonly grpc::Method<global::RefundService.NotifyRequest, global::RefundService.NotifyReply> __Method_NotifyCustomer = new grpc::Method<global::RefundService.NotifyRequest, global::RefundService.NotifyReply>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "NotifyCustomer",
        __Marshaller_Refund_NotifyRequest,
        __Marshaller_Refund_NotifyReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::RefundService.RefundReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of RefundService</summary>
    [grpc::BindServiceMethod(typeof(RefundService), "BindService")]
    public abstract partial class RefundServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::RefundService.RefundReply> Refund(global::RefundService.RefundRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task NotifyCustomer(global::RefundService.NotifyRequest request, grpc::IServerStreamWriter<global::RefundService.NotifyReply> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(RefundServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_Refund, serviceImpl.Refund)
          .AddMethod(__Method_NotifyCustomer, serviceImpl.NotifyCustomer).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, RefundServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_Refund, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::RefundService.RefundRequest, global::RefundService.RefundReply>(serviceImpl.Refund));
      serviceBinder.AddMethod(__Method_NotifyCustomer, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::RefundService.NotifyRequest, global::RefundService.NotifyReply>(serviceImpl.NotifyCustomer));
    }

  }
}
#endregion
